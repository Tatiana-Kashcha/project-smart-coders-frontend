{"version":3,"file":"static/js/88.c7aac2a9.chunk.js","mappings":"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","sources":["icons/chevron-left.svg","icons/chevron-right.svg","components/PeriodPaginator/PeriodPaginator.styled.js","components/PeriodPaginator/PeriodPaginator.jsx","redux/tasks/selectors.js","hooks/useTasks.js","components/PeriodTypeSelect/PeriodTypeSelect.jsx","components/CalendarToolbar/CalendarToolbar.styled.js","components/CalendarToolbar/CalendarToolbar.jsx","components/CalendarTable/CalendarTable.styled.js","components/CalendarTable/CalendarTable.jsx","components/MonthCalendarHead/MonthCalendarHead.styled.jsx","components/MonthCalendarHead/MonthCalendarHead.jsx","components/ChoosedMonth/ChoosedMonth.jsx","components/DayCalendarHead/DayCalendarHead.jsx","components/TasksColumnsList/TasksColumnsList.jsx","components/ChoosedDay/ChoosedDay.jsx","pages/CalendarPage.jsx"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgChevronLeft(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M11.25 13.5 6.75 9l4.5-4.5\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronLeft);\nexport default __webpack_public_path__ + \"static/media/chevron-left.637403f816c5581794a2aedee890e4d6.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgChevronRight(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"m6.75 13.5 4.5-4.5-4.5-4.5\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronRight);\nexport default __webpack_public_path__ + \"static/media/chevron-right.43bcd6bc09720b92868e7db39d88a61b.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nimport { ReactComponent as ChevronLeft } from '../../icons/chevron-left.svg';\nimport { ReactComponent as ChevronRight } from '../../icons/chevron-right.svg';\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n`;\n\nexport const TestStyleButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ChevronLeftMod = styled(ChevronLeft)`\n  width: 16px;\n  height: 16px;\n`;\n\nexport const ChevronRightMod = styled(ChevronRight)`\n  width: 16px;\n  height: 16px;\n`;\n","import dayjs from 'dayjs';\n\nimport * as s from './PeriodPaginator.styled';\n\nexport const PeriodPaginator = ({ date, periodType, upDateDate }) => {\n  const currentMonth = dayjs(date).format('MMMM YYYY');\n  const currentDay = dayjs(date).format('D MMM YYYY');\n\n  return (\n    <>\n      <span style={{ display: 'block', backgroundColor: 'pink' }}>\n        {periodType === 'month' ? currentMonth : currentDay}\n      </span>\n      <s.ButtonWrapper>\n        <s.TestStyleButton\n          type=\"button\"\n          onClick={() => {\n            upDateDate(-1);\n          }}\n        >\n          <s.ChevronLeftMod />\n        </s.TestStyleButton>\n        <s.TestStyleButton\n          type=\"button\"\n          onClick={() => {\n            upDateDate(1);\n          }}\n        >\n          <s.ChevronRightMod />\n        </s.TestStyleButton>\n      </s.ButtonWrapper>\n    </>\n  );\n};\n\n/* \"1. Компонент отримує в пропсах дату, тип періоду та метод для зміни дати. ✅\n2. Компонент рендерить розмітку з відформатованим періодом дат в залежності від обраних дати та періоду та блок з кнопками для зміни дати, що збільшують або зменшують період до наступного/попереднього відповідно. ✅\n3. Клік по кнопках змінює дату в залежності від типу періоду:✅\n - month - залишає число поточного дня місяця змінюючи місяць/рік попереднього/наступного місяця✅\n - day - змінює дату поточного дня  на дату попереднього/наступного дня✅\n4. Компонент форматує період:✅\n - month - MARCH 2023✅\n - day - 6 MARCH 2023\" ✅*/\n","export const selectTasks = state => state.tasks.tasks;\nexport const selectIsLoading = state => state.tasks.isLoading;\nexport const selectError = state => state.tasks.error;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useCallback } from 'react';\n\nimport * as selectors from 'redux/tasks/selectors';\nimport * as operations from 'redux/tasks/operations';\n\nexport const useTasks = () => {\n  const dispatch = useDispatch();\n\n  const tasks = useSelector(selectors.selectTasks);\n  const isLoading = useSelector(selectors.selectIsLoading);\n  const error = useSelector(selectors.selectError);\n\n  const getAllTasks = useCallback(\n    date => dispatch(operations.getAllTasks(date)),\n    [dispatch]\n  );\n  const addTask = task => dispatch(operations.addTask(task));\n  const deleteTask = taskId => dispatch(operations.deleteTask(taskId));\n  const patchTask = ({ id, task }) =>\n    dispatch(operations.patchTask({ id, task }));\n\n  return {\n    tasks,\n    isLoading,\n    error,\n    getAllTasks,\n    addTask,\n    deleteTask,\n    patchTask,\n  };\n};\n","export const PeriodTypeSelect = ({ handleChange }) => {\n  const handleClick = e => {\n    const { name } = e.target;\n\n    if (name === 'month') {\n      handleChange('month');\n    } else {\n      handleChange('day');\n    }\n  };\n\n  return (\n    <>\n      <h1>PeriodTypeSelect</h1>\n      <button type=\"button\" onClick={handleClick} name=\"month\">\n        month\n      </button>\n      <button type=\"button\" onClick={handleClick} name=\"day\">\n        day\n      </button>\n    </>\n  );\n};\n\n/* \"1. Компонент рендерить блок навігації для переадресацї юзера на таблицю з задачами відповідно до обраного типу періоду day | month. ✅\n2. Кнопка що вказує поточний тип обраного періоду має активні стилі, як показано на макеті.\" */\n","import styled from 'styled-components';\n\nexport const TestDiv = styled.div`\n  background-color: tomato;\n`;\n","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport dayjs from 'dayjs';\n\nimport { useTasks } from 'hooks/useTasks';\nimport { useDate } from 'hooks/useDate';\n\nimport { PeriodPaginator } from 'components/PeriodPaginator/PeriodPaginator';\nimport { PeriodTypeSelect } from 'components/PeriodTypeSelect/PeriodTypeSelect';\n\nimport * as s from './CalendarToolbar.styled';\n\nexport const CalendarToolbar = ({ periodType, handleChange }) => {\n  const { choosedDate, setChoosedDate } = useDate();\n  const [date, setDate] = useState(choosedDate);\n  const { getAllTasks } = useTasks();\n\n  const navigate = useNavigate();\n  const monthMod = dayjs(date).format('MM');\n  const yearMod = dayjs(date).format('YYYY');\n  const currentMonthModify = dayjs(date).format('MMMM-YYYY').toLowerCase();\n  const currentDayModify = dayjs(date).format('DD-MMM-YYYY').toLowerCase();\n\n  useEffect(() => {\n    setChoosedDate(date);\n  }, [date, setChoosedDate]);\n\n  useEffect(() => {\n    if (periodType === 'month') {\n      navigate(`/calendar/month/${currentMonthModify}`);\n    } else {\n      navigate(`/calendar/day/${currentDayModify}`);\n    }\n  }, [periodType, currentMonthModify, currentDayModify, navigate]);\n\n  useEffect(() => {\n    getAllTasks({ month: monthMod, year: yearMod });\n  }, [getAllTasks, monthMod, yearMod]);\n\n  const upDateDate = PlusOrMinus => {\n    if (periodType === 'month') {\n      const newDateMonth = new Date(date);\n      newDateMonth.setMonth(newDateMonth.getMonth() + PlusOrMinus);\n      setDate(newDateMonth);\n    } else {\n      const newDateDay = new Date(date);\n      newDateDay.setDate(newDateDay.getDate() + PlusOrMinus);\n      setDate(newDateDay);\n    }\n  };\n\n  return (\n    <s.TestDiv>\n      <PeriodPaginator\n        date={date}\n        periodType={periodType}\n        upDateDate={upDateDate}\n      />\n      <PeriodTypeSelect periodType={periodType} handleChange={handleChange} />\n    </s.TestDiv>\n  );\n};\n\n/* 1. Компонент рендерить:\n - PeriodPaginator - дозволяє юзеру змінити дату періоду, задачі за який він хоче подивитись. ✅\n - PeriodTypeSelect - дозволяє юзеру змінити тип періоду, задачі за який він хоче подивитись. ✅\n2. Компонент отримує тип періоду, та має локальний стейт з датою.✅\nПри зміні дати або типу періоду відбуваеться запит на отримання задач за обраний період, якщо задач з даного періоду досі немає в глобальному стейті.✅\nУспіх - дані пишуться в глобальний стейт✅\nПомилка - виводиться відповідне пуш повідомлення.\n \n */\n","import styled from 'styled-components';\n\n// зовнішній контур\nexport const CalendarGridWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  grid-template-rows: repeat(6, 1fr);\n  grid-gap: 1px;\n  max-width: 767px;\n  max-height: 625px;\n  margin: 0 auto;\n  height: 470px;\n  border: ${({ theme }) => theme.colors.userInputBorder}; //border\n  color: ${({ theme }) => theme.colors.calendarText}; //циферки\n  /* border: 1px solid rgba(220, 227, 229, 0.8); */\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: ${props =>\n    props.isWeekend ? 'opacity = 0,3 ' : 'inherit'};\n  /* background-color: inherit; */\n  /* background-color: inherit; */\n\n  @media screen and (min-width: 768px) {\n    max-width: 704px;\n    height: calc(100vh - 280px);\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 1087px;\n    height: calc(100vh - 270px);\n  }\n\n  /* transition-property: all; */\n  transition-duration: 100ms;\n  transition-timing-function: linear;\n  :focus,\n  :hover {\n    transform: scale(1.05);\n    z-index: 1;\n    border-radius: 3px;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n    cursor: pointer;\n  }\n`;\n\nexport const RowInCell = styled.div`\n  display: flex;\n  /* margin: 4px 8px; */\n  @media screen and (min-width: 1440px) {\n    /* margin: 14px 14px; */\n  }\n`;\n\nexport const CellWrapper = styled.div`\n  //циферки\n  display: flex;\n  margin-bottom: 0px;\n  padding: 8px 4px;\n  justify-content: flex-end;\n  background-color: ${({ theme }) => theme.colors.bgrCalendar};\n  @media screen and (min-width: 768px) {\n  }\n  @media screen and (min-width: 1440px) {\n    padding: 14px;\n  }\n`;\n// клітинка-дні\n\nexport const DayWrapper = styled.div`\n  width: 24px;\n  height: 26px;\n  /* margin: 6px; */\n  /* margin: 4px 6px; */\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  flex-direction: column;\n  /* justify-content: flex-end; */\n  /* margin-right: 2px; */\n\n  font-family: Inter;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.17;\n\n  color: ${({ theme }) => theme.colors.primaryText};\n  @media screen and (min-width: 768px) {\n    width: 27px;\n    height: 26px;\n\n    font-size: 16px;\n    line-height: 1.12;\n    margin-right: 10px;\n  }\n  animation: scaleAnimation 1s linear infinite alternate;\n`;\n\nexport const CurrentDay = styled.span`\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  color: ${({ theme }) => theme.colors.white};\n\n  align-items: center;\n  justify-content: center;\n  padding: 4px 8px;\n\n  background: ${({ theme }) => theme.colors.primaryText};\n  border-radius: 50%;\n\n  @media screen and (min-width: 768px) {\n    width: 27px;\n    height: 26px;\n\n    font-size: ${props => props.theme.fontSizes.s};\n    line-height: ${props => props.theme.lineHeights.heading};\n  }\n`;\n\n// export const ShowDayWrapper = styled.div`\n//   display: flex;\n//   justify-content: flex-end;\n// `;\n\n// export const TaskList = styled.ul`\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: center;\n//   gap: 2px;\n//   width: 100%;\n//   padding: 0;\n//   margin: 0;\n\n//   font-family: ${props => props.theme.fonts.heading};\n//   font-style: normal;\n//   font-weight: ${props => props.theme.fontWeights.bold};\n//   font-size: ${props => props.theme.fontSizes.xs};\n//   line-height: ${props => props.theme.lineHeights.body};\n\n//   list-style: none;\n// `;\n\n// export const TaskItem = styled.li`\n//   padding: 4px 4px 4px 4px;\n\n//   border-radius: ${props => props.theme.radii.small};\n\n//   background-color: ${props => {\n//     switch (props.priority) {\n//       case 'low':\n//         return '#72C2F8';\n//       case 'medium':\n//         return props.theme.colors.lightYellow;\n//       case 'high':\n//         return props.theme.colors.lightRed;\n//       default:\n//         return props.theme.colors.lightRed;\n//     }\n//   }};\n\n//   color: ${props => {\n//     switch (props.priority) {\n//       case 'low':\n//         return props.theme.colors.primary;\n//       case 'medium':\n//         return props.theme.colors.mainYellow;\n//       case 'high':\n//         return props.theme.colors.mainRed;\n//       default:\n//         return '#72C2F8';\n//     }\n//   }};\n\n/* @media screen and (min-width: ${props => props.theme.breakpoints.table}) {\n    padding: 4px 10px 4px 12px;\n\n    font-size: ${props => props.theme.fontSizes.s};\n    line-height: ${props => props.theme.lineHeights.body};\n  }\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.desktop}) {\n    padding: 4px 15px 4px 12px;\n  }\n`; */\n\nexport const HiddenTaskCount = styled.span`\n  color: green;\n  position: absolute;\n  left: 2px;\n  top: 15px;\n  font-style: italic;\n  font-size: 10px;\n  line-height: 1.4;\n  font-weight: 600;\n\n  @media (min-width: 768px) {\n    left: 2px;\n    top: 20px;\n\n    font-size: 14px;\n    line-height: 1.29;\n  }\n\n  @media (min-width: 1440px) {\n    left: 4px;\n    top: 25px;\n  }\n`;\n","import React from 'react';\nimport moment from 'moment';\nimport {\n  CalendarGridWrapper,\n  CellWrapper,\n  DayWrapper,\n  RowInCell,\n} from './CalendarTable.styled';\n\nconst currentDate = moment();\nconst startDay = currentDate.startOf('month').startOf('week');\nconst day = startDay.clone().add(1, 'd');\n\nmoment.updateLocale('en', { week: { dow: 1 } });\n\nconst CalendarTable = ({ startDay }) => {\n  const currentDayOfMonth = currentDate.format('D');\n  const currentMonth = currentDate.format('MMMM');\n\n  const endDay = currentDate.endOf('month').endOf('week');\n  const calendar = [];\n\n  while (!day.isAfter(endDay)) {\n    calendar.push(day.clone());\n    day.add(1, 'day');\n  }\n\n  // window.moment = moment;\n\n  const totalDays = 42;\n  const daysArray = [...Array(totalDays)].map(() => day.add(1, 'day').clone());\n\n  return (\n    <div>\n      <h1>Current Month: {currentMonth}</h1>\n      <CalendarGridWrapper>\n        {daysArray.map(dayItem => (\n          <CellWrapper\n            key={dayItem.format('DDMMYYYY')}\n            // IsWeekend={dayItem.day() === 6 || dayItem.day() === 0}\n          >\n            <DayWrapper>\n              <RowInCell>\n                {dayItem.format('D') === currentDayOfMonth ? (\n                  <strong>{dayItem.format('D')}</strong>\n                ) : (\n                  dayItem.format('D')\n                )}\n              </RowInCell>\n            </DayWrapper>\n          </CellWrapper>\n        ))}\n      </CalendarGridWrapper>\n    </div>\n  );\n};\n\nexport default CalendarTable;\n","import styled from 'styled-components';\n\nexport const StyledHead = styled.ul`\n  display: flex;\n  justify-content: space-around;\n\n  padding: 14px 0px;\n\n  border: ${({ theme }) => theme.colors.calendarOutBorder};\n  border-radius: 8px;\n  margin-bottom: 14px;\n  background-color: ${({ theme }) => theme.colors.bgrCalendar}; //\n\n  @media (min-width: 768px) {\n    margin-bottom: 18px;\n  }\n  @media (min-width: 1440px) {\n    margin-bottom: 15px;\n  }\n`;\nexport const StyledItem = styled.li`\n  font-family: 'InterSemiBold', sans-serif;\n  font-size: 16px;\n\n  color: ${props =>\n    props.item === 'SAT' || props.item === 'SUN'\n      ? '#3e85f3'\n      : props.theme.colors.calendarText};\n\n  /* calendarText  */\n  .full-name {\n    display: block;\n  }\n  .short-name {\n    display: none;\n  }\n\n  @media (max-width: 480px) {\n    .full-name {\n      display: none;\n    }\n\n    .short-name {\n      display: block;\n    }\n  }\n`;\n","// export const MonthCalendarHead = () => {\n//   return <h1>MonthCalendarHead - дні тижня без дат</h1>;\n// };\n\nimport { StyledItem, StyledHead } from './MonthCalendarHead.styled';\n\nconst MonthCalendarHead = () => {\n  const daysOfWeek = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n\n  return (\n    <StyledHead>\n      {daysOfWeek.map(day => (\n        <StyledItem item={day.toUpperCase()} key={day}>\n          <span className=\"full-name\">{day.toUpperCase()}</span>\n          <span className=\"short-name\">{day.toUpperCase().slice(0, 1)}</span>\n        </StyledItem>\n      ))}\n    </StyledHead>\n  );\n};\n\nexport default MonthCalendarHead;\n","import CalendarTable from 'components/CalendarTable/CalendarTable';\nimport MonthCalendarHead from '../MonthCalendarHead/MonthCalendarHead';\n// import moment from 'moment';\n// import { useSelector } from 'react-redux';\n// import { selectTasks } from '../../redux/task/selectors';\n// import { useParams } from 'react-router-dom';\n\nexport const ChoosedMonth = () => {\n  // const allTasks = useSelector(selectTasks);\n\n  // const { currentDate } = useParams();\n  // const today = moment(currentDate);\n  // const startDay = today.clone().startOf('month').startOf('week');\n  // const totalDays = 42;\n  // const startDay = moment().startOf('month').startOf('week');\n\n  return (\n    <div>\n      <MonthCalendarHead />\n      <CalendarTable\n        // tasks={allTasks}\n        //  today={today}\n        startDay={'startDay'}\n      />\n    </div>\n  );\n};\n","export const DayCalendarHead = () => {\n  return (\n    <h1>\n      DayCalendarHead - дні тижня з датами, клік по дню з датою показує колонки\n      з задачами за обраний день.\n    </h1>\n  );\n};\n","export const TasksColumnsList = () => {\n  return (\n    <>\n      <h1>\n        TasksColumnsList - блок з трьома колонками списків завданнь -\n        TasksColumn (To do | In progress | Done). На мобільній та планшетній\n        версії має горизонтальний скрол, якщо колонок більше ніж вміщає ширина\n        екрану пристрою юзера.\n      </h1>\n    </>\n  );\n};\n","import { DayCalendarHead } from 'components/DayCalendarHead/DayCalendarHead';\nimport { TasksColumnsList } from 'components/TasksColumnsList/TasksColumnsList';\n\nexport const ChoosedDay = () => {\n  return (\n    <>\n      <h1>ChoosedDay містить в собі:</h1>\n      <DayCalendarHead />\n      <TasksColumnsList />\n    </>\n  );\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport dayjs from 'dayjs';\n\nimport { useTasks } from 'hooks/useTasks';\nimport { useDate } from 'hooks/useDate';\n\nimport { CalendarToolbar } from 'components/CalendarToolbar/CalendarToolbar';\nimport { ChoosedMonth } from 'components/ChoosedMonth/ChoosedMonth';\nimport { ChoosedDay } from 'components/ChoosedDay/ChoosedDay';\n\nexport default function CalendarPage() {\n  const [periodType, setPeriodType] = useState('month');\n  const { choosedDate } = useDate();\n  const { tasks, getAllTasks } = useTasks();\n  const currentDate = useMemo(() => new Date(), []);\n\n  const month = currentDate.setMonth(currentDate.getMonth());\n  const year = currentDate.setFullYear(currentDate.getFullYear());\n  const monthMod = dayjs(month).format('MM');\n  const yearMod = dayjs(year).format('YYYY');\n\n  const isFirstVisit = useMemo(() => {\n    const storedValue = sessionStorage.getItem('isFirstVisit');\n    return storedValue ? JSON.parse(storedValue) : true;\n  }, []);\n\n  useEffect(() => {\n    if (isFirstVisit) {\n      sessionStorage.setItem('isFirstVisit', 'false');\n    } else {\n      setPeriodType('day');\n    }\n  }, [isFirstVisit]);\n\n  useEffect(() => {\n    if (tasks.length === 0 && currentDate === choosedDate) {\n      getAllTasks({ month: monthMod, year: yearMod });\n    }\n  }, [choosedDate, currentDate, getAllTasks, monthMod, tasks.length, yearMod]);\n\n  const handleChange = period => {\n    setPeriodType(period);\n  };\n\n  return (\n    <>\n      <CalendarToolbar periodType={periodType} handleChange={handleChange} />\n      {periodType === 'month' ? <ChoosedMonth /> : <ChoosedDay />}\n    </>\n  );\n}\n\n/* \"1. Компонент рендериться на маршрут /calendar. ✅\n2. При першому вході на сторінку компонент виконує переадресацію на розширений маршрут /calendar/month/:currentDate для відображення календяря місяця ✅\n2. Сторінка повинна відображатись відповідно до макету на 3х розширеннях(375, 768, 1440) ✅\n3. На сторінці знаходиться модуль CalendarToolbar - з яким користувач може обрати тип періоду, та його інтервал ✅\n4. На сторінці відображаеться один з модулів періоду дат календаря:\n - ChoosedMonth - дозволяє подивитись всі задачі на місяць, перейти на сторінку одного дня ChoosedDay. ✅\n - ChoosedDay - дозволяє створювати задачі та розділити ці задачі  на групи по ступеню їх виконання. ✅\n5. При новому відвідуванні додатку та першому вході на сторінку відображаеться модуль ChoosedMonth з розкладкою комірок з датами поточного місяця. ✅\n6. На сторінці повинен здійснюватись запит за завданнями, якщо вони відсутні в глобальному стейті ✅\n7. Успіх - дані записуються у відповідний стейт ✅\n8. Помилка - користувачу показується відповідне пуш-повідомлення\"   */\n"],"names":["_path","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgChevronLeft","_ref","svgRef","title","titleId","props","xmlns","viewBox","fill","stroke","ref","id","strokeLinecap","strokeLinejoin","strokeWidth","d","ForwardRef","SvgChevronRight","ButtonWrapper","styled","_templateObject","_taggedTemplateLiteral","TestStyleButton","_templateObject2","ChevronLeftMod","ChevronLeft","_templateObject3","ChevronRightMod","ChevronRight","_templateObject4","PeriodPaginator","date","periodType","upDateDate","currentMonth","dayjs","format","currentDay","_jsxs","_Fragment","children","_jsx","style","display","backgroundColor","s","type","onClick","selectTasks","state","tasks","selectIsLoading","isLoading","selectError","error","useTasks","dispatch","useDispatch","useSelector","selectors","getAllTasks","useCallback","operations","addTask","task","deleteTask","taskId","patchTask","PeriodTypeSelect","handleChange","handleClick","e","name","TestDiv","CalendarToolbar","_useDate","useDate","choosedDate","setChoosedDate","_useState","useState","_useState2","_slicedToArray","setDate","navigate","useNavigate","monthMod","yearMod","currentMonthModify","toLowerCase","currentDayModify","useEffect","concat","month","year","PlusOrMinus","newDateMonth","Date","setMonth","getMonth","newDateDay","getDate","CalendarGridWrapper","theme","colors","userInputBorder","_ref2","calendarText","isWeekend","RowInCell","CellWrapper","_ref3","bgrCalendar","DayWrapper","_ref4","primaryText","currentDate","_templateObject5","_ref5","white","_ref6","fontSizes","lineHeights","heading","_templateObject6","moment","day","startOf","clone","add","week","dow","startDay","currentDayOfMonth","endDay","endOf","calendar","isAfter","push","daysArray","_toConsumableArray","Array","map","dayItem","StyledHead","calendarOutBorder","StyledItem","item","toUpperCase","className","slice","ChoosedMonth","MonthCalendarHead","CalendarTable","DayCalendarHead","TasksColumnsList","ChoosedDay","CalendarPage","setPeriodType","_useTasks","useMemo","setFullYear","getFullYear","isFirstVisit","storedValue","sessionStorage","getItem","JSON","parse","setItem","period"],"sourceRoot":""}