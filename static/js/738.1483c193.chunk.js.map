{"version":3,"file":"static/js/738.1483c193.chunk.js","mappings":"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","sources":["components/PeriodPaginator/PeriodPaginator.jsx","components/PeriodTypeSelect/PeriodTypeSelect.jsx","components/CalendarToolbar/CalendarToolbar.styled.js","components/CalendarToolbar/CalendarToolbar.jsx","components/CalendarTable/CalendarTable.jsx","components/MonthCalendarHead/MonthCalendarHead.jsx","components/ChoosedMonth/ChoosedMonth.styled.js","components/ChoosedMonth/ChoosedMonth.jsx","components/DayCalendarHead/DayCalendarHead.jsx","components/TasksColumnsList/TasksColumnsList.jsx","components/ChoosedDay/ChoosedDay.styled.js","components/ChoosedDay/ChoosedDay.jsx","pages/CalendarPage.jsx","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["export const PeriodPaginator = ({ date, periodType, changeDate }) => {\n  return <h1>PeriodPaginator - MARCH 2023 + </h1>;\n};\n\n/* \"1. Компонент отримує в пропсах дату, тип періоду та метод для зміни дати. ✅\n2. Компонент рендерить розмітку з відформатованим періодом дат в залежності від обраних дати та періоду та блок з кнопками для зміни дати, що збільшують або зменшують період до наступного/попереднього відповідно.\n3. Клік по кнопках змінює дату в залежності від типу періоду:\n - month - залишає число поточного дня місяця змінюючи місяць/рік попереднього/наступного місяця\n - day - змінює дату поточного дня  на дату попереднього/наступного дня\n4. Компонент форматує період:\n - month - MARCH 2023\n - day - 6 MARCH 2023\" */\n","import { useNavigate } from 'react-router';\n\nexport const PeriodTypeSelect = ({ switchMonthOrDay }) => {\n  const navigate = useNavigate();\n\n  const handleClick = e => {\n    const { name } = e.target;\n\n    switch (name) {\n      case 'month':\n        navigate('/calendar/month/:currentDate');\n        switchMonthOrDay(true);\n        break;\n\n      case 'day':\n        navigate('/calendar/day/:currrentDay');\n        switchMonthOrDay(false);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <h1>PeriodTypeSelect</h1>\n      <button type=\"button\" onClick={handleClick} name=\"month\">\n        month\n      </button>\n      <button type=\"button\" onClick={handleClick} name=\"day\">\n        day\n      </button>\n    </>\n  );\n};\n\n/* \"1. Компонент рендерить блок навігації для переадресацї юзера на таблицю з задачами відповідно до обраного типу періоду day | month. ✅\n2. Кнопка що вказує поточний тип обраного періоду має активні стилі, як показано на макеті.\" */\n","import styled from 'styled-components';\n\nexport const TestDiv = styled.div`\n  background-color: tomato;\n`;\n","import { PeriodPaginator } from 'components/PeriodPaginator/PeriodPaginator';\nimport { PeriodTypeSelect } from 'components/PeriodTypeSelect/PeriodTypeSelect';\n\nimport * as s from './CalendarToolbar.styled';\n// import { useState } from 'react';\n\nexport const CalendarToolbar = ({ switchMonthOrDay, getPeriodType }) => {\n  // const [date, setDate] = useState(null);\n\n  const changeDate = () => {};\n\n  return (\n    <s.TestDiv>\n      <h1>CalendarToolbar в середні якого:</h1>\n      <PeriodPaginator date={null} periodType={null} changeDate={changeDate} />\n      <PeriodTypeSelect switchMonthOrDay={switchMonthOrDay} />\n    </s.TestDiv>\n  );\n};\n\n/* 1. Компонент рендерить:\n - PeriodPaginator - дозволяє юзеру змінити дату періоду, задачі за який він хоче подивитись. ✅\n - PeriodTypeSelect - дозволяє юзеру змінити тип періоду, задачі за який він хоче подивитись. ✅\n2. Компонент отримує тип періоду, та має локальний стейт з датою.\nПри зміні дати або типу періоду відбуваеться запит на отримання задач за обраний період, якщо задач з даного періоду досі немає в глобальному стейті.\nУспіх - дані пишуться в глобальний стейт\nПомилка - виводиться відповідне пуш повідомлення.\n \n */\n","export const CalendarTable = () => {\n  return (\n    <h1>\n      CalendarTable - таблиця з днями обраного місяця, відповідно до днів тижня\n    </h1>\n  );\n};\n","export const MonthCalendarHead = () => {\n  return <h1>MonthCalendarHead - дні тижня без дат</h1>;\n};\n","import styled from 'styled-components';\n\nexport const TestDiv = styled.div`\n  background-color: teal;\n`;\n","import { CalendarTable } from 'components/CalendarTable/CalendarTable';\nimport { MonthCalendarHead } from 'components/MonthCalendarHead/MonthCalendarHead';\n\nimport * as s from './ChoosedMonth.styled';\n\nexport const ChoosedMonth = () => {\n  return (\n    <s.TestDiv>\n      <h1>ChoosedMonth містить в собі:</h1>\n      <MonthCalendarHead />\n      <CalendarTable />\n    </s.TestDiv>\n  );\n};\n","export const DayCalendarHead = () => {\n  return (\n    <h1>\n      DayCalendarHead - дні тижня з датами, клік по дню з датою показує колонки\n      з задачами за обраний день.\n    </h1>\n  );\n};\n","export const TasksColumnsList = () => {\n  return (\n    <>\n      <h1>\n        TasksColumnsList - блок з трьома колонками списків завданнь -\n        TasksColumn (To do | In progress | Done). На мобільній та планшетній\n        версії має горизонтальний скрол, якщо колонок більше ніж вміщає ширина\n        екрану пристрою юзера.\n      </h1>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TestDiv = styled.div`\n  background-color: orchid;\n`;\n","import { DayCalendarHead } from 'components/DayCalendarHead/DayCalendarHead';\nimport { TasksColumnsList } from 'components/TasksColumnsList/TasksColumnsList';\n\nimport * as s from './ChoosedDay.styled';\n\nexport const ChoosedDay = () => {\n  return (\n    <s.TestDiv>\n      <h1>ChoosedDay містить в собі:</h1>\n      <DayCalendarHead />\n      <TasksColumnsList />\n    </s.TestDiv>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { CalendarToolbar } from 'components/CalendarToolbar/CalendarToolbar';\nimport { ChoosedMonth } from 'components/ChoosedMonth/ChoosedMonth';\nimport { ChoosedDay } from 'components/ChoosedDay/ChoosedDay';\n\nexport default function CalendarPage() {\n  const isFirstVisit = JSON.parse(sessionStorage.getItem('isFirstVisit'));\n\n  const [monthOrDay, setMonthOrDay] = useState(!isFirstVisit); // !isFirstVisit = true\n\n  useEffect(() => {\n    sessionStorage.setItem('isFirstVisit', 'true');\n  }, []);\n\n  // true = month, false = day\n  const switchMonthOrDay = monthOrDay => {\n    setMonthOrDay(monthOrDay);\n  };\n\n  return (\n    <>\n      <CalendarToolbar switchMonthOrDay={switchMonthOrDay} />\n      {monthOrDay ? <ChoosedMonth /> : <ChoosedDay />}\n    </>\n  );\n}\n\n/* \"1. Компонент рендериться на маршрут /calendar. ✅\n2. При першому вході на сторінку компонент виконує переадресацію на розширений маршрут /calendar/month/:currentDate для відображення календяря місяця ✅\n2. Сторінка повинна відображатись відповідно до макету на 3х розширеннях(375, 768, 1440) ✅\n3. На сторінці знаходиться модуль CalendarToolbar - з яким користувач може обрати тип періоду, та його інтервал ✅\n4. На сторінці відображаеться один з модулів періоду дат календаря:\n - ChoosedMonth - дозволяє подивитись всі задачі на місяць, перейти на сторінку одного дня ChoosedDay. ✅\n - ChoosedDay - дозволяє створювати задачі та розділити ці задачі  на групи по ступеню їх виконання. ✅\n5. При новому відвідуванні додатку та першому вході на сторінку відображаеться модуль ChoosedMonth з розкладкою комірок з датами поточного місяця. ✅\n6. На сторінці повинен здійснюватись запит за завданнями, якщо вони відсутні в глобальному стейті ➖\n7. Успіх - дані записуються у відповідний стейт ➖\n8. Помилка - користувачу показується відповідне пуш-повідомлення\" ➖ */\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["PeriodPaginator","_ref","date","periodType","changeDate","_jsx","children","PeriodTypeSelect","switchMonthOrDay","navigate","useNavigate","handleClick","e","target","name","_jsxs","_Fragment","type","onClick","TestDiv","styled","_templateObject","_taggedTemplateLiteral","CalendarToolbar","getPeriodType","s","CalendarTable","MonthCalendarHead","ChoosedMonth","DayCalendarHead","TasksColumnsList","ChoosedDay","CalendarPage","isFirstVisit","JSON","parse","sessionStorage","getItem","_useState","useState","_useState2","_slicedToArray","monthOrDay","setMonthOrDay","useEffect","setItem","strings","raw","slice","Object","freeze","defineProperties","value"],"sourceRoot":""}