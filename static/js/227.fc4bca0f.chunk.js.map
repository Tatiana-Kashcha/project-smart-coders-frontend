{"version":3,"file":"static/js/227.fc4bca0f.chunk.js","mappings":"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","sources":["icons/chevron-left.svg","icons/chevron-right.svg","components/PeriodPaginator/PeriodPaginator.styled.js","components/PeriodPaginator/PeriodPaginator.jsx","components/StatisticsChart/StatisticsChart.styled.js","components/StatisticsChart/StatisticsChart.jsx","pages/StatisticsPage.jsx","redux/tasks/selectors.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgChevronLeft(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M11.25 13.5 6.75 9l4.5-4.5\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronLeft);\nexport default __webpack_public_path__ + \"static/media/chevron-left.637403f816c5581794a2aedee890e4d6.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgChevronRight(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"m6.75 13.5 4.5-4.5-4.5-4.5\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronRight);\nexport default __webpack_public_path__ + \"static/media/chevron-right.43bcd6bc09720b92868e7db39d88a61b.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nimport { ReactComponent as ChevronLeft } from '../../icons/chevron-left.svg';\nimport { ReactComponent as ChevronRight } from '../../icons/chevron-right.svg';\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n`;\n\nexport const TestStyleButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ChevronLeftMod = styled(ChevronLeft)`\n  width: 16px;\n  height: 16px;\n`;\n\nexport const ChevronRightMod = styled(ChevronRight)`\n  width: 16px;\n  height: 16px;\n`;\n","import dayjs from 'dayjs';\n\nimport * as s from './PeriodPaginator.styled';\n\nexport const PeriodPaginator = ({ date, periodType, upDateDate }) => {\n  const currentMonth = dayjs(date).format('MMMM YYYY');\n  const currentDay = dayjs(date).format('D MMM YYYY');\n\n  return (\n    <>\n      <span style={{ display: 'block', backgroundColor: 'pink' }}>\n        {periodType === 'month' ? currentMonth : currentDay}\n      </span>\n      <s.ButtonWrapper>\n        <s.TestStyleButton\n          type=\"button\"\n          onClick={() => {\n            upDateDate(-1);\n          }}\n        >\n          <s.ChevronLeftMod />\n        </s.TestStyleButton>\n        <s.TestStyleButton\n          type=\"button\"\n          onClick={() => {\n            upDateDate(1);\n          }}\n        >\n          <s.ChevronRightMod />\n        </s.TestStyleButton>\n      </s.ButtonWrapper>\n    </>\n  );\n};\n\n/* \"1. Компонент отримує в пропсах дату, тип періоду та метод для зміни дати. ✅\n2. Компонент рендерить розмітку з відформатованим періодом дат в залежності від обраних дати та періоду та блок з кнопками для зміни дати, що збільшують або зменшують період до наступного/попереднього відповідно. ✅\n3. Клік по кнопках змінює дату в залежності від типу періоду:✅\n - month - залишає число поточного дня місяця змінюючи місяць/рік попереднього/наступного місяця✅\n - day - змінює дату поточного дня  на дату попереднього/наступного дня✅\n4. Компонент форматує період:✅\n - month - MARCH 2023✅\n - day - 6 MARCH 2023\" ✅*/\n","import styled from 'styled-components';\nimport { globalTheme } from 'theme';\n\nexport const StatWrapper = styled.div`\n  padding: 28px 14px 135px;\n  border-radius: 16px;\n\n  background-color: ${props => props.theme.colors.secondBackground};\n\n  @media screen and (min-width: ${globalTheme.breakpoints.tablet}) {\n    position: relative;\n    padding: 132px 32px 224px;\n  }\n\n  @media screen and (min-width: ${globalTheme.breakpoints.desktop}) {\n    padding: 134px 114px 104px;\n  }\n`;\n\nexport const Legend = styled.div`\n  display: flex;\n  gap: 14px;\n  margin-top: 20px;\n\n  font-family: Poppins;\n  font-size: 14px;\n  line-height: calc(18 / 14);\n\n  color: ${props => props.theme.colors.secondText};\n\n  @media screen and (min-width: ${globalTheme.breakpoints.tablet}) {\n    position: absolute;\n    right: 64px;\n    top: 140px; //TODO: CHANGE!!!\n    gap: 20px;\n    font-size: 16px;\n    line-height: calc(18 / 16);\n  }\n\n  @media screen and (min-width: ${globalTheme.breakpoints.desktop}) {\n    right: 154px;\n    top: 142px; //TODO: CHANGE!!!\n  }\n`;\n\nexport const DayLegend = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &::before {\n    width: 8px;\n    height: 8px;\n    border-radius: 100%;\n    content: '';\n    background-color: ${globalTheme.colors.lightRed};\n  }\n`;\n\nexport const MonthLegend = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &::before {\n    width: 8px;\n    height: 8px;\n    border-radius: 100%;\n    content: '';\n    background-color: ${globalTheme.colors.primary};\n  }\n`;\n\nexport const DiagramWrapper = styled.div`\n  margin-top: 40px;\n  /* height: 413px; //TODO: DELETE!!! */\n  font-size: 300px; //TODO: DELETE!!!\n\n  /* padding: 40px 14px; */\n  border: 0.8px solid ${props => props.theme.colors.borderStat};\n  border-radius: 20px;\n\n  color: ${props => props.theme.colors.secondText};\n\n  @media screen and (min-width: ${globalTheme.breakpoints.tablet}) {\n    /* padding: 32px; */\n    border-radius: 29px;\n    /* height: 424px; //TODO: DELETE!!! */\n  }\n\n  @media screen and (min-width: ${globalTheme.breakpoints.desktop}) {\n    padding: 40px;\n    border-radius: 29px;\n    height: 440px; //TODO: DELETE!!!\n  }\n`;\n","import React from 'react';\nimport { useRef, useEffect, useState } from 'react';\nimport { selectTasks } from '../../redux/tasks/selectors';\nimport * as s from './StatisticsChart.styled';\n\n\n\nimport {  \nChart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\nimport { Bar } from 'react-chartjs-2';\nimport { useSelector } from 'react-redux';\nimport dayjs from 'dayjs';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  ChartDataLabels\n);\n\nexport const getChartOptions = props => ({\n  responsive: true,\n  layout: {\n    padding: 40,\n  },\n  scales: {\n    x: {\n      grid: {\n        display: false,\n      },\n      border: {\n        color: 'transparent',\n      },\n      ticks: {\n        font: {\n          family: 'Inter',\n          size: 14,\n          weight: 400,\n          lineHeight: 1.5,\n        },\n        color: props.theme.colors.thirdText,\n      },\n    },\n    y: {\n      border: {\n        color: 'transparent',\n      },\n      grid: {\n        display: true,\n        color: 'rgba(227, 243, 255, 1)',\n      },\n      ticks: {\n        stepSize: 20,\n        color: props.theme.colors.thirdText,\n        font: {\n          family: 'Inter',\n          size: 11,\n          weight: 500,\n          lineHeight: 1.5,\n        },\n        maxTicksLimit: 100,\n      },\n    },\n  },\n  plugins: {\n    datalabels: {\n      display: true,\n      color: props.theme.colors.thirdText,\n      font: {\n        family: 'Inter',\n        size: 11,\n        weight: 500,\n        lineHeight: 1.5,\n      },\n      formatter: function (value, data) {\n          if (data.length === 0) {\n            return 0 + \"%\";\n          }\n        const total = data.dataset.data.reduce((previousValue, number) => {\n          return previousValue + number;\n        });\n        const percentage = ((value / total) * 100).toFixed(0) + '%';\n        return percentage;\n      },\n      anchor: 'end',\n      offset: -20,\n      align: 'start',\n    },\n    legend: {\n      display: false,\n    },\n    title: {\n      display: true,\n      text: 'Tasks',\n      color: props.theme.colors.thirdText,\n      align: 'start',\n      padding: { top: 0, left: 0, right: 0, bottom: 24 },\n      font: {\n        family: 'Inter',\n        size: 14,\n        weight: 600,\n        lineHeight: 1.5,\n      },\n    },\n  },\n});\n\nexport const data = {\n  labels: ['To Do', 'In Progress', 'Done'],\n  datasets: [\n    {\n      label: 'tasks by day',\n      // data: [40, 58, 50],\n      borderRadius: 5,\n      borderSkipped: 'end',\n      barPercentage: 0.7,\n      categoryPercentage: 0.25,\n    },\n    {\n      label: 'tasks by month',\n      // data: [90, 63, 87],\n      borderRadius: 5,\n      borderSkipped: 'end',\n      barPercentage: 0.7,\n      categoryPercentage: 0.25,\n    },\n  ],\n};\n\nfunction createGradient1(ctx, area) {\n  const colorStart = 'rgba(255, 210, 221, 0.00)';\n  const colorEnd = '#FFD2DD';\n\n  const gradient1 = ctx.createLinearGradient(0, area.top, 0, area.bottom);\n\n  gradient1.addColorStop(0.03, colorStart);\n  gradient1.addColorStop(1, colorEnd);\n\n  return gradient1;\n}\n\nfunction createGradient2(ctx, area) {\n  const colorStart = 'rgba(62, 133, 243, 0.00)';\n  const colorEnd = '#3E85F3 ';\n\n  const gradient2 = ctx.createLinearGradient(0, area.top, 0, area.bottom);\n\n  gradient2.addColorStop(0, colorStart);\n  gradient2.addColorStop(1, colorEnd);\n\n  return gradient2;\n}\n\nexport default function StatisticsChart(props) {\n  const chartRef = useRef(null);\n  const [chartData, setChartData] = useState({\n    datasets: [],\n  });\n\n  const allTascksByMonth = useSelector(selectTasks);\n  console.log(allTascksByMonth);\n\n  const allTascksToDo = allTascksByMonth.filter(\n    tasck => tasck.category === 'to-do'\n  ).length;\n  // console.log(allTascksToDo);\n\n  const allTascksInProgress = allTascksByMonth.filter(\n    tasck => tasck.category === 'in-progress'\n  ).length;\n  // console.log(allTascksInProgress);\n\n  const allTascksDone = allTascksByMonth.filter(\n    tasck => tasck.category === 'done'\n  ).length;\n  // console.log(allTascksDone);\n\n  // console.log(props.date);\n  const dateMod = dayjs(props.date).format('YYYY-MM-DD');\n  console.log(dateMod);\n  // const dayOfSearch = '2023-10-08';\n\n  const allTascksByDay = allTascksByMonth.filter(tasck => tasck.date === `${dateMod}`);\n  // console.log(allTascksByDay);\n\n  const tascksByDayToDo = allTascksByDay.filter(\n    tasck => tasck.category === 'to-do'\n  ).length;\n  // console.log(tascksByDayToDo);\n\n  const tascksByDayInProgress = allTascksByDay.filter(\n    tasck => tasck.category === 'in-progress'\n  ).length;\n  // console.log(tascksByDayInProgress);\n\n  const tascksByDayDone = allTascksByDay.filter(\n    tasck => tasck.category === 'done'\n  ).length;\n  // console.log(tascksByDayDone);\n\n  useEffect(() => {\n    const chart = chartRef.current;\n\n    if (!chart) return;\n\n    const gradients = [\n      { backgroundColor: createGradient1(chart.ctx, chart.chartArea) },\n      { backgroundColor: createGradient2(chart.ctx, chart.chartArea) },\n    ];\n\n    const realData = [\n      { data: [tascksByDayToDo, tascksByDayInProgress, tascksByDayDone] },\n      { data: [allTascksToDo, allTascksInProgress, allTascksDone] },\n    ];\n\n    const updatedData = {\n      ...data,\n      datasets: data.datasets.map((datasets, index) => {\n        const obj2 = gradients[index];\n        const obj3 = realData[index];\n        return { ...datasets, ...obj2, ...obj3 };\n      }),\n    };\n\n    setChartData(updatedData);\n    // console.log(updatedData);\n\n    // Оновлення опцій графіка\n    chart.options = getChartOptions(props);\n    // console.log(getChartOptions(props));\n    chart.update();\n    // console.log('chart.update')\n  }, [\n    props,\n    allTascksDone,\n    allTascksInProgress,\n    allTascksToDo,\n    tascksByDayDone,\n    tascksByDayInProgress,\n    tascksByDayToDo,\n  ]);\n\n  return (\n    <>\n      <s.Legend>\n        <s.DayLegend>By Day</s.DayLegend>\n        <s.MonthLegend>By Month</s.MonthLegend>\n      </s.Legend>\n      <s.DiagramWrapper>\n        <Bar ref={chartRef} options={getChartOptions(props)} data={chartData} />\n      </s.DiagramWrapper>\n    </>\n  );\n}\n","import { useThemeContext } from 'hooks';\nimport { PeriodPaginator } from 'components/PeriodPaginator/PeriodPaginator';\nimport StatisticsChart from 'components/StatisticsChart/StatisticsChart';\nimport * as s from '../components/StatisticsChart/StatisticsChart.styled';\nimport { useState } from 'react';\nimport { useDate } from 'hooks/useDate';\n\nexport default function StatisticsPage() {\n  const { choosedDate } = useDate();\n  const [date, setDate] = useState(choosedDate);\n  const { theme } = useThemeContext();\n\n  const upDateDate = PlusOrMinus => {\n    const newDateDay = new Date(date);\n    newDateDay.setDate(newDateDay.getDate() + PlusOrMinus);\n    setDate(newDateDay);\n  };\n\n  return (\n    <s.StatWrapper>\n      <PeriodPaginator date={date} upDateDate={upDateDate} />\n      <div\n        style={{\n          width: '307px',\n          height: '30px',\n          color: '#FFF',\n          textAlign: 'center',\n          fontSize: '14px',\n          fontWeight: '700',\n          lineHeight: '18px',\n          textTransform: 'uppercase',\n          backgroundColor: 'blueviolet',\n        }}\n      ></div>\n      <StatisticsChart date={date} theme={theme} />\n    </s.StatWrapper>\n  );\n}\n","export const selectTasks = state => state.tasks.tasks;\nexport const selectIsLoading = state => state.tasks.isLoading;\nexport const selectError = state => state.tasks.error;\n"],"names":["_path","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgChevronLeft","_ref","svgRef","title","titleId","props","xmlns","viewBox","fill","stroke","ref","id","strokeLinecap","strokeLinejoin","strokeWidth","d","ForwardRef","SvgChevronRight","ButtonWrapper","styled","_templateObject","_taggedTemplateLiteral","TestStyleButton","_templateObject2","ChevronLeftMod","ChevronLeft","_templateObject3","ChevronRightMod","ChevronRight","_templateObject4","PeriodPaginator","date","periodType","upDateDate","currentMonth","dayjs","format","currentDay","_jsxs","_Fragment","children","_jsx","style","display","backgroundColor","s","type","onClick","StatWrapper","theme","colors","secondBackground","globalTheme","Legend","secondText","DayLegend","MonthLegend","DiagramWrapper","_templateObject5","borderStat","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","ChartDataLabels","getChartOptions","responsive","layout","padding","scales","x","grid","border","color","ticks","font","family","size","weight","lineHeight","thirdText","y","stepSize","maxTicksLimit","plugins","datalabels","formatter","value","data","dataset","reduce","previousValue","number","toFixed","anchor","offset","align","legend","text","top","left","right","bottom","labels","datasets","label","borderRadius","borderSkipped","barPercentage","categoryPercentage","createGradient1","ctx","area","gradient1","createLinearGradient","addColorStop","createGradient2","gradient2","StatisticsChart","chartRef","useRef","_useState","useState","_useState2","_slicedToArray","chartData","setChartData","allTascksByMonth","useSelector","selectTasks","console","log","allTascksToDo","filter","tasck","category","allTascksInProgress","allTascksDone","dateMod","allTascksByDay","concat","tascksByDayToDo","tascksByDayInProgress","tascksByDayDone","useEffect","chart","current","gradients","chartArea","realData","updatedData","_objectSpread","map","index","obj2","obj3","options","update","Bar","StatisticsPage","choosedDate","useDate","setDate","useThemeContext","PlusOrMinus","newDateDay","Date","getDate","width","height","textAlign","fontSize","fontWeight","textTransform","state","tasks","selectIsLoading","isLoading","selectError","error"],"sourceRoot":""}